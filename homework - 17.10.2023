1. Given a one-dimensional array. Arrange the elements of a given array in the opposite 
direction to the given one, without using an additional array.

function reverseArray(arr) {
    arr.reverse();
}

let myArray = [12, 24, 36, 48, 50];
reverseArray(myArray);
console.log(myArray); 

// PS C:\Users\Armen\OneDrive\Desktop\AGBU\ArpineNa\ArpineNa_Exercises> node promises
[ 50, 48, 36, 24, 12 ]



2. Given a one-dimensional array. Get a new array with odd array elements at the beginning.

function oddElementsatFirst(arr) {

    const oddElements = arr.filter(element => element % 2 !== 0);
    const evenElements = arr.filter(element => element % 2 === 0);
    return oddElements.concat(evenElements);
}


const givenArray = [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
const newArray = oddElementsatFirst(givenArray);

console.log(newArray);

PS C:\Users\Armen\OneDrive\Desktop\AGBU\ArpineNa\ArpineNa_Exercises> node promises
[
  -3, -1,  1, 3, 5, 7, 9,
  11, 13, -2, 0, 2, 4, 6,
   8, 10, 12
]

3. Find numbers from the given array containing an arithmetic progression and print them.

Chem karoxacel grel

